#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node start.js          - –∑–∞–ø—É—Å—Ç–∏—Ç—å Docker Compose —Å –ø–æ–ª–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
 * node start.js frontend - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
 * node start.js backend  - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –±—ç–∫–µ–Ω–¥
 */

const { execSync } = require('child_process');
const { existsSync } = require('fs');
const path = require('path');
const args = process.argv.slice(2);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
try {
  execSync('docker --version', { stdio: 'ignore' });
  console.log('‚úì Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
} catch (error) {
  console.error('‚úó Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã.');
  console.log('  –í—ã –≤—Å—ë –µ—â—ë –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏.');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!existsSync('.env')) {
  console.warn('‚ö† –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –ö–æ–ø–∏—Ä—É—é env.example –≤ .env...');
  try {
    execSync('copy env.example .env', { stdio: 'inherit' });
    console.log('‚úì –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω');
  } catch (error) {
    console.error('‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .env. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∏–∑ env.example');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å –≤—ã–≤–æ–¥–æ–º
function runCommand(command) {
  console.log(`> ${command}`);
  try {
    execSync(command, { stdio: 'inherit' });
    return true;
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: ${command}`);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
const component = args[0] || 'all';

switch (component) {
  case 'frontend':
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...');
    runCommand('npm run dev:frontend');
    break;
    
  case 'backend':
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞...');
    runCommand('npm run dev:backend');
    break;
    
  case 'all':
  default:
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ Docker Compose...');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
    if (!existsSync('.env')) {
      console.error('‚úó –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è Docker Compose');
      process.exit(1);
    }
    
    runCommand('docker-compose up');
    break;
} 